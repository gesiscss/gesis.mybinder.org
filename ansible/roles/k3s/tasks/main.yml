- name: Disable SWAP since kubernetes can't work with swap enabled
  ansible.builtin.command: swapoff -a
  changed_when: false
- name: Disable SWAP in fstab since kubernetes can't work with swap enabled
  ansible.builtin.replace:
    path: /etc/fstab
    regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
    replace: '# \1'
- name: Disable Firewall
  ansible.builtin.command: ufw disable
  changed_when: false
- name: Install dependencies
  ansible.builtin.apt:
    update_cache: true
    pkg:
      - curl
- name: Generate /etc/kubelet.yaml
  ansible.builtin.copy:
    src: files/etc/kubelet.yaml
    dest: /etc/kubelet.yaml
    owner: root
    group: root
    mode: u=rw,g=r,o=r
- name: Populate service facts
  ansible.builtin.service_facts:
- name: Install K3s
  when: ('k3s.service' not in ansible_facts.services)
  ansible.builtin.import_tasks:
    file: k3s.yml
- name: Setting host facts regarding traefik
  ansible.builtin.stat:
    path: /var/lib/rancher/k3s/server/manifests/traefik.yaml
  register: has_traefik
- name: Remove traefik manifest
  when: has_traefik.stat.exists
  ansible.builtin.file:
    path: /var/lib/rancher/k3s/server/manifests/traefik.yaml
    state: absent
- name: Remove traefik deployment
  when: has_traefik.stat.exists
  kubernetes.core.helm:
    release_name: traefik
    release_namespace: kube-system
    state: absent
    wait: true
- name: Remove traefik-crd deployment
  when: has_traefik.stat.exists
  kubernetes.core.helm:
    release_name: traefik-crd
    release_namespace: kube-system
    state: absent
    wait: true
# To allow high availability during upgrades,
# the K3s containers continue running when the K3s service is stopped.
- name: Restart K3s for changes to take effect
  ansible.builtin.systemd_service:
    enabled: true
    name: k3s
    state: restarted
- name: Make sure K3s is running
  ansible.builtin.systemd_service:
    enabled: true
    name: k3s
    state: started

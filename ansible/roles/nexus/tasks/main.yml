# Sonartype publishes a Helm Chart,
# https://artifacthub.io/packages/helm/sonatype/nxrm-ha,
# for their resiliency and high-availability deployment
# but this Helm Chart requires a Nexus Repository Pro license,
#
# Most people looking into Nexus Repository OSS are using
# https://github.com/stevehipwell/helm-charts.
- name: Add nexus's repository
  kubernetes.core.helm_repository:
    name: '{{ nexus_helm_repo }}'
    repo_url: '{{ nexus_helm_repo_url }}'

- name: Create a k8s namespace
  kubernetes.core.k8s:
    name: "{{ nexus_namespace }}"
    api_version: v1
    kind: Namespace
    state: '{{ nexus_state }}'

- name: Create a secret for nexus root password
  kubernetes.core.k8s:
    state: '{{ nexus_state }}'
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: '{{ nexus_name }}-root-password'
        namespace: "{{ nexus_namespace }}"
      data:
        password: '{{ nexus_root_password }}'

- name: Create a storage for nexus
  kubernetes.core.k8s:
    state: '{{ nexus_state }}'
    definition:
      apiVersion: v1
      kind: PersistentVolume
      metadata:
        name: "{{ nexus_name }}-registry"
        labels:
          nexus: registry
      spec:
        capacity:
          storage: "{{ nexus_registry_storage }}"
        volumeMode: Filesystem
        accessModes:
          - ReadWriteOnce
        persistentVolumeReclaimPolicy: Delete
        storageClassName: "{{ nexus_storage_class_name }}-registry"
        local:
          path: /nexus/registry
        nodeAffinity:
          required:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: nexus
                    operator: In
                    values:
                      - 'true'

- name: Deploy nexus
  kubernetes.core.helm:
    release_state: '{{ nexus_state }}'
    chart_ref: '{{ nexus_helm_repo }}/{{ nexus_name }}'
    chart_version: "{{ nexus_chart_version }}"
    release_name: "{{ nexus_name }}"
    release_namespace: "{{ nexus_namespace }}"
    create_namespace: true
    history_max: 3
    values:
      image:
        # See https://hub.docker.com/r/sonatype/nexus3/tags
        tag: '{{ nexus_version }}'
      ingress:
        enabled: false
      persistence:
        enabled: true
        storageClass: "{{ nexus_storage_class_name }}-registry"
      properties:
        # The application context path is the directory found after the domain name in the sites URL.
        # https://help.sonatype.com/en/configuring-the-runtime-environment.html#application-context-path
        - 'nexus-context-path={{ nexus_path }}'
      startupProbe:
        httpGet:
          path: '{{ nexus_path }}'
      livenessProbe:
        httpGet:
          path: '{{ nexus_path }}'
      readinessProbe:
        httpGet:
          path: '{{ nexus_path }}/service/rest/v1/status'
      service:
        # From https://help.sonatype.com/en/docker-registry.html
        #
        # > The Docker client does not accept the application context path or base registry path
        # > as Docker needs the registry exposed at the root of the host + port that it is accessing.
        #
        # > Nexus Repository manages this Docker limitation [...] Using port connectors
        # > (limit to only 20 connectors/repositories)
        additionalPorts:
          - port: 8082
            name: docker-group
            containerPort: 8082
            hosts:
              - '{{ nexus_domain }}'

- name: Create a ingress for nexus
  kubernetes.core.k8s:
    state: '{{ nexus_state }}'
    definition:
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: '{{ nexus_name }}-ingress'
        namespace: '{{ nexus_namespace }}'
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt
      spec:
        # Don't change the ingressClassName
        ingressClassName: nginx
        tls:
          - hosts:
              - '{{ nexus_domain }}'
              - '{{ nexus_registry_domain }}'
            secretName: '{{ nexus_name_tls_secret }}'
        rules:
          - host: '{{ nexus_domain }}'
            http:
              paths:
                - path: '{{ nexus_path }}'
                  pathType: Prefix
                  backend:
                    service:
                      name: '{{ nexus_name }}'
                      port:
                        name: http
          - host: '{{ nexus_registry_domain }}'
            http:
              paths:
                - path: '{{ nexus_registry_path }}'
                  pathType: Prefix
                  backend:
                    service:
                      name: '{{ nexus_name }}'
                      port:
                        name: docker-group
